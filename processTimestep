#!/usr/bin/env bash

[ $# -eq 0 ] && { echo "Usage: processTimestep <alignment.fasta> <SampleID> <Percent identity> <discard LB> <subsample UB>\n example: processTimestep data.fastq VXX 0.99 5 30"; exit 1; }
#THIS WILL BE THE MASTER FILE THAT TAKES A .FASTQ, AND OUTPUTS CLUSTERS OF READS

# quit if any command fails
set -e
set -o pipefail

pbFastqClean $1
echo "STEP 1: QUALITY FILTERING"
filterFastq $1.pbformatfixed.fastq $2
echo "STEP 2: STRAND CALLING"
strandCaller $1.pbformatfixed.fastq.good.fasta
echo "correcting frame shifts"
correct_shifts.py -v $1.pbformatfixed.fastq.good.fasta.matches.fasta $1.pbformatfixed.fastq.good.fasta.matches.fasta.unshifted.fasta > $1.correction_summary
echo "STEP 3: READ COLLAPSING"
clusterReads $1.pbformatfixed.fastq.good.fasta.matches.fasta.unshifted.fasta $3
echo "STEP 4: CLUSTER PICKING"
cd $1.pbformatfixed.fastq.good.fasta.matches.fasta.unshifted.fasta.clusterdir
selectClusters $4 $5
echo "STEP 5: CLUSTER ALIGNMENT"
cd keepers
keeperCounter=0
# for k in cluster_*; do keeperCounter=$[$keeperCounter+1]; echo "alignAndTouch `pwd`/$k `pwd`/$k.complete" | qsub -l walltime=48:00:00; done
for k in cluster_*; do keeperCounter=$[$keeperCounter+1]; alignAndTouch `pwd`/$k `pwd`/$k.complete; done
echo "Number of alignments:"
echo $keeperCounter
echo "Aligning clusters"

test=0 
while [ $test -lt $keeperCounter ]
do
sleep 1;
test=`ls -1 *.complete | wc -l`;
echo -ne "Alignments complete so far: $test of $keeperCounter \r"
done

echo "Aligning clusters complete"

echo "STEP 6: CREATING HQ CONSENSUS SEQS"
for k in cluster_*.mafft.fasta; do DNAcons.py `pwd`/$k; done

echo "Collecting consensuses into $2"
cat *.cons.fasta >../../$2
cd ../../

echo "Removing duplicate consensuses"
keepUniques $2

echo "STEP 7: IDENTIFYING PRESERVED READING FRAMES"
perfectORFs $2.collapsed.fasta
